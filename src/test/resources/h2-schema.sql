   DROP TABLE PRODUCT_CATALOG IF EXISTS;
   CREATE TABLE PRODUCT_CATALOG 
   (    PART_NUMBER VARCHAR(25), 
    CATEGORY VARCHAR(50), 
    CHANNEL VARCHAR(50), 
    CABLE_TYPE VARCHAR(25), 
    MORE_INFO_URL VARCHAR(4000), 
    DISPLAY_TAGLINE VARCHAR(100), 
    PRICE_TYPE VARCHAR(25), 
    PRICE NUMBER, 
    SHORT_NAME VARCHAR(30)
   );
   
   DROP TABLE PRODUCT IF EXISTS;
   create table PRODUCT
   (
    part_number varchar(50),
    product_name varchar(50),
    DEFAULT_NO number
   );
   
   DROP TABLE COMPATIBILITY IF EXISTS;
   create table COMPATIBILITY
   (
    part_number varchar(25),
    children varchar(50),
    mutually_mandatory varchar(50)
   );
   
   DROP TABLE ELIGIBILITY IF EXISTS;
   create table ELIGIBILITY
   (
    PART_NUMBER varchar(25),
    SEGMENT_NAME varchar(50),
    START_DATE DATE,
    END_DATE DATE
   );
   
   DROP TABLE SLOF_CUSTOMER_DETAILS IF EXISTS;
     CREATE TABLE SLOF_CUSTOMER_DETAILS 
   (    IC_TYPE VARCHAR(25), 
    IC_NUMBER VARCHAR(25), 
    NAME VARCHAR(100), 
    MOBILE_NUMBER VARCHAR(25), 
    DOB VARCHAR(20), 
    EMAILID VARCHAR(100), 
    PASSPORT_COUNTY_OF_ORIGIN VARCHAR(20), 
    DATETIME_CREATED TIMESTAMP (6), 
    CITY VARCHAR(500), 
    COUNTRY VARCHAR(20), 
    POSTCODE VARCHAR(20), 
    STATE VARCHAR(20), 
    STREET_TYPE VARCHAR(20), 
    STREET_NAME VARCHAR(20), 
    SECTION VARCHAR(20), 
    UNIT_NUMBER VARCHAR(20), 
    FLOOR_NUMBER VARCHAR(20), 
    BUILDING_NAME VARCHAR(20), 
    ADDRESS_SERVICEABLE CHAR(1)
   ) ;
   
   DROP TABLE SLOF_NON_SERVICEABLE_ADDRESS IF EXISTS;
   CREATE TABLE SLOF_NON_SERVICEABLE_ADDRESS
   (    EMAILID VARCHAR(50), 
    MOBILE_NUMBER VARCHAR(25), 
    DATETIME_CREATED TIMESTAMP (6)
   ) ;
   
   DROP TABLE CUSTOMER_WEB_PROFILE IF EXISTS;
   CREATE TABLE CUSTOMER_WEB_PROFILE
   ( PRIMARY_ID_TYPE VARCHAR(50),
    PRIMARY_ID VARCHAR(50),
    LOGIN_ID VARCHAR(50)
   );
   
   DROP TABLE EMAILCONFIG IF EXISTS;
   CREATE TABLE EMAILCONFIG
   (
   SUBJECT VARCHAR(200) NOT NULL,
   MESSAGE VARCHAR(1000) NOT NULL,
   FROM_EMAIL_ID VARCHAR(100) NOT NULL,
   MAIL_CONTEXT VARCHAR(100) NOT NULL
   );
   
   DROP TABLE PORTAL_AUDIT_SERVICE_CALL IF EXISTS;
   CREATE TABLE PORTAL_AUDIT_SERVICE_CALL
   ( AUDIT_SERVICE_CALL_ID VARCHAR(100),
   PART_NUM VARCHAR(100),
   REMOTE_HOST VARCHAR(100),
   SESSION_ID VARCHAR(100),
   PORTAL_TRANSACTION_ID VARCHAR(100),
   BE_NAME VARCHAR(100),
   UPDATED_DT TIMESTAMP,
   ARG_1 VARCHAR(100),
   ARG_2 VARCHAR(100),
   ARG_3 VARCHAR(100),
   ARG_4 VARCHAR(100),
   ARG_5 VARCHAR(100)
   );
   
   -- sequences
   DROP SEQUENCE SEQ_ORDER_ID IF EXISTS;
   CREATE SEQUENCE SEQ_ORDER_ID START WITH 1 INCREMENT BY 1;
   
   DROP SEQUENCE SEQ_AUDIT_SERVICE_CALL IF EXISTS;
   CREATE SEQUENCE SEQ_AUDIT_SERVICE_CALL START WITH 1 INCREMENT BY 1;